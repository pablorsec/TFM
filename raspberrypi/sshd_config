Last login: Thu Jul 25 08:31:37 on ttys001
MacBook-Pro-de-Pablo:~ pablo$ ssh -p 3297 pi@192.168.5.158
pi@192.168.5.158's password: 
Linux raspberrypi 4.14.98-v7+ #1200 SMP Tue Feb 12 20:27:48 GMT 2019 armv7l

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Thu Jul 25 07:56:07 2019 from 192.168.5.105

Wi-Fi is disabled because the country is not set.
Use raspi-config to set the country before use.

pi@raspberrypi:~ $ ls
beats
bin
logstash-cowrie.conf
master.pdf
pibeats-7.2.0.tar.gz
pluginfile.php?file=%2F1672%2Fmod_resource%2Fcontent%2F5%2FPresentaci%C3%B3n%20PFMs.pdf
pluginfile.php?file=%2F1672%2Fmod_resource%2Fcontent%2F5%2FPresentaci%C3%B3n%20PFMs.pdf.1
pluginfile.php?file=%2F1672%2Fmod_resource%2Fcontent%2F5%2FPresentaci%C3%B3n%20PFMs.pdf.2
script
workdir
pi@raspberrypi:~ $ rm master.pdf 
pi@raspberrypi:~ $ rm pluginfile.php\?file\=%2F1672%2Fmod_resource%2Fcontent%2F5%2FPresentaci%C3%B3n%20PFMs.pdf*
pi@raspberrypi:~ $ ls
beats  bin  logstash-cowrie.conf  pibeats-7.2.0.tar.gz  script  workdir
pi@raspberrypi:~ $ cat script 
# -------------------------------------------------------------
# Step 1) Build
# NOTE: the git checkout version needs to match the elastic search API version
# -------------------------------------------------------------
elastic_version="7.2.0"

echo "--------------------------------"
echo "  $(date)"
echo "  Downloading source..."
echo "--------------------------------"
go get github.com/elastic/beats
cd /go/src/github.com/elastic/beats/filebeat/
git checkout "v${elastic_version}"
echo "--------------------------------"
echo "  $(date)"
echo "  Building source..."
echo "--------------------------------"
GOARCH=arm go build
cp filebeat /build
cd /build

# -------------------------------------------------------------
# Step 2) Download the tar
# The url contains the version number like this: "https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.1.1-linux-x86.tar.gz"
# -------------------------------------------------------------

# then download the linux tar from:
download_url="https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-${elastic_version}-linux-x86.tar.gz"
echo "---------------------------------------"
echo "  $(date)"
echo "  Downloading filebeat tarball from:"
echo "  ${download_url}"
echo "---------------------------------------"
curl $download_url -o download.tar 

# -------------------------------------------------------------
# Step 3) Untar, modify, tar
# Drop the filebeat binary into the new tar....
# -------------------------------------------------------------
echo "--------------------------------------------"
echo "  $(date)"
echo "  Adding the filebeat binary to the tar..."
echo "--------------------------------------------"
mkdir workdir
tar -xf download.tar -C workdir --strip-components=1
cp filebeat workdir/filebeat
cd workdir
tar -zcf ../pibeats-${elastic_version}.tar.gz .
cd ..
echo "--------------------------------"
echo "  $(date)"
echo "  Clearning up..."
echo "--------------------------------"
rm -rf filebeat
rm -rf workdir
rm -rf download.tar

echo "-------------------------------------------------------------"
echo "  $(date)"
echo "  COMPLETE! Copy pibeats.tar.gz to raspberry pi!"
echo ""
echo "  Something like this?"
echo "  scp ./pibeats.tar.gz username@pi_address:/home/username/"
echo "-------------------------------------------------------------"
pi@raspberrypi:~ $ cd /home/cowrie/cowrie/
pi@raspberrypi:/home/cowrie/cowrie $ ls
bin               Dockerfile  INSTALL.rst  README.rst               setup.py  var
CHANGELOG.rst     docs        LICENSE.rst  requirements-dev.txt     share
CONTRIBUTING.rst  etc         Makefile     requirements-output.txt  src
cowrie-env        honeyfs     MANIFEST.in  requirements.txt         tox.ini
pi@raspberrypi:/home/cowrie/cowrie $ cd bin/
pi@raspberrypi:/home/cowrie/cowrie/bin $ ls
asciinema  cowrie  createdynamicprocess.py  createfs  fsctl  playlog
pi@raspberrypi:/home/cowrie/cowrie/bin $ cd ..
pi@raspberrypi:/home/cowrie/cowrie $ cd etc/
pi@raspberrypi:/home/cowrie/cowrie/etc $ ls
cowrie.cfg  cowrie.cfg.dist  userdb.example
pi@raspberrypi:/home/cowrie/cowrie/etc $ cat cowrie.cfg
[honeypot]
hostname = term_001
log_path = var/log/cowrie
sftp = true

[output_jsonlog]
enabled = true
logfile = /home/cowrie/cowrie/var/log/cowrie/cowrie.json
epoch_timestamp = true
 
#[output_elasticsearch]
#enabled = true
#host = 192.168.5.108
#port = 9200
#index = cowrie
#type = cowrie
#pipeline = geoip

[telnet]
enabled = true
listen_endpoints = tcp:2223:interface=0.0.0.0
reported_port = 23

[ssh]
enabled = true
listen_endpoints = tcp:2222:interface=0.0.0.0
reported_port = 22
pi@raspberrypi:/home/cowrie/cowrie/etc $ nano cowrie.cfg
pi@raspberrypi:/home/cowrie/cowrie/etc $ ls
cowrie.cfg  cowrie.cfg.dist  userdb.example
pi@raspberrypi:/home/cowrie/cowrie/etc $ cd ..
pi@raspberrypi:/home/cowrie/cowrie $ ls
bin               Dockerfile  INSTALL.rst  README.rst               setup.py  var
CHANGELOG.rst     docs        LICENSE.rst  requirements-dev.txt     share
CONTRIBUTING.rst  etc         Makefile     requirements-output.txt  src
cowrie-env        honeyfs     MANIFEST.in  requirements.txt         tox.ini
pi@raspberrypi:/home/cowrie/cowrie $ cd src/
pi@raspberrypi:/home/cowrie/cowrie/src $ ls
cowrie  twisted
pi@raspberrypi:/home/cowrie/cowrie/src $ cd cowrie/
pi@raspberrypi:/home/cowrie/cowrie/src/cowrie $ ls
commands  __init__.py   insults  proxy   shell  telnet  _version.py
core      __init__.pyc  output   python  ssh    test
pi@raspberrypi:/home/cowrie/cowrie/src/cowrie $ cd ..
pi@raspberrypi:/home/cowrie/cowrie/src $ cd
pi@raspberrypi:~ $ nano /etc/ss
ssh/ ssl/ 
pi@raspberrypi:~ $ nano /etc/ssh/sshd_config 

  GNU nano 2.7.4                        File: /etc/ssh/sshd_config                                  

#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

# override default of no subsystems
Subsystem       sftp    /usr/lib/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#       X11Forwarding no
#       AllowTcpForwarding no
#       PermitTTY no
#       ForceCommand cvs server
